apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

//name = 'grooscript'
group = 'org.grooscript'
version = '0.2'

sourceCompatibility = 1.7

//mainClassName = 'org.yila.gscript'

def appName = 'GrooScript'
def webDir = '../grooscript_web'
def webDirJar = "$webDir/lib"
def webDirExamples = "$webDir/scripts/examples/"
def webDirJs = "$webDir/web-app/js/"

def demoDir = '../monkfish'
def demoDirJar = "$demoDir/lib"
def demoDirJs = "$demoDir/web-app/js/"

def examplesDir = 'src/test/resources/'
def webExamples = [:]
webExamples.putAt 'MysticTable',"${examplesDir}advanced/MysticTable.groovy"
webExamples.putAt 'ExpandoTree',"${examplesDir}advanced/Tree.groovy"
webExamples.putAt 'Random',"${examplesDir}advanced/RandomWorld.groovy"
webExamples.putAt 'MethodMissing',"${examplesDir}advanced/MethodMissing.groovy"
webExamples.putAt 'SortingLists',"${examplesDir}advanced/Sorting.groovy"
webExamples.putAt 'Strings',"${examplesDir}advanced/StringSecrets.groovy"

repositories {
    mavenCentral()
    //maven {
    //    url "http://oss.sonatype.org/content/repositories/snapshots/"
    //}
}

dependencies {
	compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.1.0'
	//groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.6'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	//testCompile fileTree(dir: 'lib', include: '*.jar')
}

//Sonar repository stuff

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
	archives javadocJar
    archives sourcesJar
}
	
signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
 
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
 
            pom.project {
               name 'GrooScript'
               packaging 'jar'
               description 'GrooScript converts your groovy code to javascript'
               url 'http://grooscript.org/'
 
               scm {
                   url 'scm:git@github.com:chiquitinxx/grooscript.git'
                   connection 'scm:git@github.com:chiquitinxx/grooscript.git'
                   developerConnection 'scm:git@github.com:chiquitinxx/grooscript.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'chiquitinxx'
                       name 'Jorge Franco'
                   }
               }
           }
        }
    }
}
//End Sonar

//Copy jar, js file, and examples to web directory, defined at start
task copyToGscriptWeb(dependsOn: build) << {
	println "Copying $appName jar to $webDirJar ..."
	copy {
		into "$webDirJar"
		from "build/libs"			
		include "**/*.jar"
		rename { 
			return "grooscript-${version}.jar"
		}
	}
	
	println "Copying $appName jsFiles to $webDirJs ..."
	copy {
		into "$webDirJs"
		from "src/main/resources/META-INF/resources"
		include "grooscript.js"
		//exclude "test.js"
	}

    
	println "Copying $appName examples to $webDirExamples ..."
	webExamples.each { key, value ->
		copy {
			into "$webDirExamples"
			from "$value"			
			rename { 
				return "${key}.groovy"
			}
		}
	}
}

//Copy jar and  js file to Demo
task copyToDemo(dependsOn: build) << {
	println "Copying $appName jar to $demoDirJar ..."
	copy {
		into "$demoDirJar"
		from "build/libs"			
		include "**/*.jar"
		rename { 
			return "grooscript-${version}.jar"
		}
	}
	
	println "Copying $appName jsFiles to $demoDirJs ..."
	copy {
		into "$demoDirJs"
		from "src/main/resources/META-INF/resources"
		include "grooscript.js"
	}

}